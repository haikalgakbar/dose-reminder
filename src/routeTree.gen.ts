/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";

// Create Virtual Routes

const MedicineLazyImport = createFileRoute("/medicine")();
const HistoryLazyImport = createFileRoute("/history")();
const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const MedicineLazyRoute = MedicineLazyImport.update({
  path: "/medicine",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/medicine.lazy").then((d) => d.Route));

const HistoryLazyRoute = HistoryLazyImport.update({
  path: "/history",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/history.lazy").then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/history": {
      id: "/history";
      path: "/history";
      fullPath: "/history";
      preLoaderRoute: typeof HistoryLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/medicine": {
      id: "/medicine";
      path: "/medicine";
      fullPath: "/medicine";
      preLoaderRoute: typeof MedicineLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/history": typeof HistoryLazyRoute;
  "/medicine": typeof MedicineLazyRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/history": typeof HistoryLazyRoute;
  "/medicine": typeof MedicineLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexLazyRoute;
  "/history": typeof HistoryLazyRoute;
  "/medicine": typeof MedicineLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/history" | "/medicine";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/history" | "/medicine";
  id: "__root__" | "/" | "/history" | "/medicine";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  HistoryLazyRoute: typeof HistoryLazyRoute;
  MedicineLazyRoute: typeof MedicineLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  HistoryLazyRoute: HistoryLazyRoute,
  MedicineLazyRoute: MedicineLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/history",
        "/medicine"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/history": {
      "filePath": "history.lazy.tsx"
    },
    "/medicine": {
      "filePath": "medicine.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
